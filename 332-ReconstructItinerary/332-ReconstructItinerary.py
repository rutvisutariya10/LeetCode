            while graph[curr]:
            answer.append(curr)
        def dfs(curr):
        answer = []
            graph[fro].append(to)
        for fro,to in tickets:
        tickets.sort(reverse=True)
        graph = collections.defaultdict(list)
    def findItinerary(self, tickets: List[List[str]]) -> List[str]:
class Solution:
                nei = graph[curr].pop()
                dfs(nei)
        dfs("JFK")
        return answer[::-1]


